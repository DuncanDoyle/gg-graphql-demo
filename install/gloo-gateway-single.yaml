common:
  cluster: cluster-1
# demo:
#   manageAddonNamespace: true
glooAgent:
  enabled: true
  relay:
    serverAddress: gloo-mesh-mgmt-server.gloo-mesh:9900
glooMgmtServer:
  serviceType: ClusterIP
  registerCluster: true
  enabled: true
  createGlobalWorkspace: true
glooUi:
  enabled: true
istioInstallations:
  enabled: true
  # Add istioOperatorSpec configuration to add Pod annotations to the ingressgateway to expose GraphQL metrics via Envoy stats.
  northSouthGateways:
    - enabled: true
      name: istio-ingressgateway
      installations:
        - clusters:
          gatewayRevision: auto
          istioOperatorSpec:
            components:
              ingressGateways:
              - enabled: true
                name: istio-ingressgateway
                namespace: gloo-mesh-gateways
                k8s:
                  podAnnotations:
                      proxy.istio.io/config: |-
                        proxyStatsMatcher:
                          inclusionRegexps:
                          - ".*graphql.*"
            # meshConfig:
            #   defaultConfig:
            #     proxyStatsMatcher:
            #       inclusionRegexps:
            #       - ".*graphql.*"
          # name: istio-ingressgateway
telemetryCollector:
  enabled: true
  config:
    exporters:
      otlp:
        endpoint: gloo-telemetry-gateway.gloo-mesh:4317
telemetryCollectorCustomization:
  # Add extra processors and pipelines to process GraphQL metrics and put them in Prometheus.
  extraProcessors:
    filter/graphql:
      metrics:
        include:
          match_type: regexp
          metric_names:
            - .*graphql.*
  extraPipelines:
      metrics/graphql:
        receivers:
        - prometheus
        processors:
        - memory_limiter
        - filter/graphql
        - batch
        exporters:
        - otlp
prometheus:
  enabled: true
redis:
  deployment:
    enabled: true
telemetryGateway:
  enabled: true
  service:
    type: ClusterIP
extAuthService:
  enabled: true
  extAuth:
    apiKeyStorage:
      # Use the local gloo-mesh-addons Redis for backing storage
      name: redis
      enabled: true
      config:
        host: "redis.gloo-mesh-addons:6379"
        # Set to 0 to match the default database for the 'glooPortalServer.apiKeyStorage' configuration
        db: 0
      # Replace with a random string to use to generate hash values for other keys
      secretKey: "ThisIsSecret"
glooPortalServer:
  enabled: true
  apiKeyStorage:
    # Use the local gloo-mesh-addons Redis for backing storage
    redis:
      enabled: true
      address: redis.gloo-mesh-addons:6379
    # Path for API key storage config file in the gloo-mesh-addons backing Redis
    configPath: /etc/redis-client-config/config.yaml
    # Replace with a random string to use to generate hash values for other keys
    secretKey: "ThisIsSecret"
rateLimiter:
  enabled: true
